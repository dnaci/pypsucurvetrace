#!/usr/bin/env python3

# This file is part of PyPSUcurvetrace, a toolbox for I/V curve tracing of electronic parts using programmable power supplies.
#
# PyPSUcurvetrace is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# PyPSUcurvetrace is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with PyPSUcurvetrace.  If not, see <http://www.gnu.org/licenses/>.

# import traceback
# import sys
# import os
import argparse
# import numpy as np
# import matplotlib.pyplot as plt
from pathlib import Path
# import tempfile
import logging

from lib.read_datafile import read_datafile
# from lib.plot_curves import plot_curves
from lib.curvetrace_tools import say_hello

# set up logger:
logger = logging.getLogger('extracpreheat')
logger.setLevel(logging.DEBUG)
ch = logging.StreamHandler()
ch.setLevel(logging.DEBUG)
formatter = logging.Formatter('%(levelname)s (%(name)s): %(message)s')
ch.setFormatter(formatter)
logger.addHandler(ch)


################
# main program #
################

# input arguments:
parser = argparse.ArgumentParser(description='extracpreheat is a Python program for extracting the pre-heat data from PyPSUcurvetrace data files.')
parser.add_argument('datafiles', nargs='+', help='Names (and paths) of PyPSUcurvetrace data files, can use wildcards.')

# Say Hello:
say_hello('listpreheat', 'Extract PyPSUcurvetrace preheat data')

args = parser.parse_args()

# determine data file(s):
datafiles = args.datafiles

# extract preheat data from files and print to console:
sep = ', '
print( 'Filename' + sep + 'Label' + sep + 'U0' + sep + 'I0' + sep + 'Uc' + sep + 'Ic' + sep + 'T')
for i in range(len(datafiles)):
	d, l, p = read_datafile(datafiles[i])
	print( Path(d.datafile).stem + sep + l + sep + str(p.U0) + sep + str(p.I0) + sep + str(p.Uc) + sep + str(p.Ic) + sep + str(p.T))
